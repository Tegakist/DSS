import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const initialNodes = [
  { id: "A", label: "設計図受領", status: "done" },
  { id: "B", label: "不明点確認", status: "waiting", reason: "設計からの回答待ち" },
  { id: "C", label: "作図開始", status: "blocked", reason: "上流の確認未完了" },
  { id: "D", label: "レビュー提出", status: "pending" },
];

const statusColor = {
  done: "bg-green-200",
  waiting: "bg-yellow-200",
  blocked: "bg-red-300",
  pending: "bg-gray-200",
};

export default function FlowBlock() {
  const [nodes, setNodes] = useState(initialNodes);

  const handleStatusChange = (id, newStatus) => {
    const updated = nodes.map((node) =>
      node.id === id ? { ...node, status: newStatus } : node
    );
    setNodes(updated);
  };

  return (
    <div className="p-6 space-y-4">
      <h1 className="text-xl font-bold">進捗阻害フロー図（試作）</h1>
      <div className="grid grid-cols-2 gap-4">
        {nodes.map((node) => (
          <Card
            key={node.id}
            className={`p-4 ${statusColor[node.status]} transition-all`}
          >
            <CardContent>
              <div className="font-semibold mb-1">{node.label}</div>
              {node.reason && <div className="text-sm">理由：{node.reason}</div>}
              <div className="mt-2 space-x-2">
                {Object.keys(statusColor).map((s) => (
                  <Button
                    key={s}
                    size="sm"
                    variant={node.status === s ? "default" : "outline"}
                    onClick={() => handleStatusChange(node.id, s)}
                  >
                    {s}
                  </Button>
                ))}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
